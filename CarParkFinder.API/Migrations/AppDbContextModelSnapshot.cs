// <auto-generated />
using System;
using CarParkFinder.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarParkFinder.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarParkFinder.API.Models.CarPark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CarParkNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CarParkNo")
                        .IsUnique();

                    b.ToTable("CarParks");
                });

            modelBuilder.Entity("CarParkFinder.API.Models.CarParkAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailableLots")
                        .HasColumnType("integer");

                    b.Property<int>("CarParkId")
                        .HasColumnType("integer");

                    b.Property<string>("CarParkNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RetrievedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TotalLots")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarParkId");

                    b.HasIndex("CarParkNo", "RetrievedAt")
                        .IsUnique();

                    b.ToTable("CarParkAvailabilities");
                });

            modelBuilder.Entity("CarParkFinder.API.Models.CarParkAvailability", b =>
                {
                    b.HasOne("CarParkFinder.API.Models.CarPark", "CarPark")
                        .WithMany("Availabilities")
                        .HasForeignKey("CarParkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarPark");
                });

            modelBuilder.Entity("CarParkFinder.API.Models.CarPark", b =>
                {
                    b.Navigation("Availabilities");
                });
#pragma warning restore 612, 618
        }
    }
}
